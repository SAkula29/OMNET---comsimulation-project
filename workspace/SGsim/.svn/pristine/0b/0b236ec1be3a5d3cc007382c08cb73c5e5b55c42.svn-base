//
// Generated file, do not edit! Created by opp_msgc 4.4 from apps/PVControl.msg.
//

#ifndef _PVCONTROL_M_H_
#define _PVCONTROL_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>apps/PVControl.msg</tt> by opp_msgc.
 * <pre>
 * enum MessageType
 * {
 * 
 *     CONT_VAR = 1;
 *     CONT_KW = 2;
 *    
 * }
 * </pre>
 */
enum MessageType {
    CONT_VAR = 1,
    CONT_KW = 2
};

/**
 * Class generated from <tt>apps/PVControl.msg</tt> by opp_msgc.
 * <pre>
 * packet
 * PVControl
 * {
 *     int type @enum(MessageType);
 *     string source;
 *     simtime_t time;
 *     double var ;
 *     double kw;
 *     double voltage;
 * }
 * </pre>
 */
class PVControl : public ::cPacket
{
  protected:
    int type_var;
    opp_string source_var;
    simtime_t time_var;
    double var_var;
    double kw_var;
    double voltage_var;

  private:
    void copy(const PVControl& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PVControl&);

  public:
    PVControl(const char *name=NULL, int kind=0);
    PVControl(const PVControl& other);
    virtual ~PVControl();
    PVControl& operator=(const PVControl& other);
    virtual PVControl *dup() const {return new PVControl(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getType() const;
    virtual void setType(int type);
    virtual const char * getSource() const;
    virtual void setSource(const char * source);
    virtual simtime_t getTime() const;
    virtual void setTime(simtime_t time);
    virtual double getVar() const;
    virtual void setVar(double var);
    virtual double getKw() const;
    virtual void setKw(double kw);
    virtual double getVoltage() const;
    virtual void setVoltage(double voltage);
};

inline void doPacking(cCommBuffer *b, PVControl& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, PVControl& obj) {obj.parsimUnpack(b);}


#endif // _PVCONTROL_M_H_
