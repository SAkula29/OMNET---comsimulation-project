//
// Generated file, do not edit! Created by opp_msgc 4.4 from apps/SmartData.msg.
//

#ifndef _SMARTDATA_M_H_
#define _SMARTDATA_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>apps/SmartData.msg</tt> by opp_msgc.
 * <pre>
 * packet
 * SmartData
 * {
 *     string source;
 *     simtime_t time;
 *     double demand ;
 *     double supply;
 *     double aPower ;
 *     double rPower;
 *     double voltage;
 * }
 * </pre>
 */
class SmartData : public ::cPacket
{
  protected:
    opp_string source_var;
    simtime_t time_var;
    double demand_var;
    double supply_var;
    double aPower_var;
    double rPower_var;
    double voltage_var;

  private:
    void copy(const SmartData& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SmartData&);

  public:
    SmartData(const char *name=NULL, int kind=0);
    SmartData(const SmartData& other);
    virtual ~SmartData();
    SmartData& operator=(const SmartData& other);
    virtual SmartData *dup() const {return new SmartData(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getSource() const;
    virtual void setSource(const char * source);
    virtual simtime_t getTime() const;
    virtual void setTime(simtime_t time);
    virtual double getDemand() const;
    virtual void setDemand(double demand);
    virtual double getSupply() const;
    virtual void setSupply(double supply);
    virtual double getAPower() const;
    virtual void setAPower(double aPower);
    virtual double getRPower() const;
    virtual void setRPower(double rPower);
    virtual double getVoltage() const;
    virtual void setVoltage(double voltage);
};

inline void doPacking(cCommBuffer *b, SmartData& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SmartData& obj) {obj.parsimUnpack(b);}


#endif // _SMARTDATA_M_H_
